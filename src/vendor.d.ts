declare module 'ramda' {
  export function F(...rest: unknown[]): false;
  export function T(...rest: unknown[]): true;
  export function __(...rest: unknown[]): unknown;
  export function add(...rest: unknown[]): unknown;
  export function addIndex(...rest: unknown[]): unknown;
  export function adjust(...rest: unknown[]): unknown;
  export function all(...rest: unknown[]): unknown;
  export function allPass(...rest: unknown[]): unknown;
  export function always(...rest: unknown[]): unknown;
  export function and(...rest: unknown[]): unknown;
  export function unknown(...rest: unknown[]): unknown;
  export function anyPass(...rest: unknown[]): unknown;
  export function ap(...rest: unknown[]): unknown;
  export function aperture(...rest: unknown[]): unknown;
  export function append(...rest: unknown[]): unknown;
  export function apply(...rest: unknown[]): unknown;
  export function applySpec(...rest: unknown[]): unknown;
  export function applyTo(...rest: unknown[]): unknown;
  export function ascend(...rest: unknown[]): unknown;
  export function assoc(...rest: unknown[]): unknown;
  export function assocPath(...rest: unknown[]): unknown;
  export function binary(...rest: unknown[]): unknown;
  export function bind(...rest: unknown[]): unknown;
  export function both(...rest: unknown[]): unknown;
  export function call(...rest: unknown[]): unknown;
  export function chain(...rest: unknown[]): unknown;
  export function clamp(...rest: unknown[]): unknown;
  export function clone(...rest: unknown[]): unknown;
  export function comparator(...rest: unknown[]): unknown;
  export function complement(...rest: unknown[]): unknown;
  export function compose(...rest: unknown[]): unknown;
  export function composeK(...rest: unknown[]): unknown;
  export function composeP(...rest: unknown[]): unknown;
  export function composeWith(...rest: unknown[]): unknown;
  export function concat(...rest: unknown[]): unknown;
  export function cond(...rest: unknown[]): unknown;
  export function construct(...rest: unknown[]): unknown;
  export function constructN(...rest: unknown[]): unknown;
  export function contains(...rest: unknown[]): unknown;
  export function converge(...rest: unknown[]): unknown;
  export function countBy(...rest: unknown[]): unknown;
  export function curry(...rest: unknown[]): unknown;
  export function curryN(...rest: unknown[]): unknown;
  export function dec(...rest: unknown[]): unknown;
  export function defaultTo(...rest: unknown[]): unknown;
  export function descend(...rest: unknown[]): unknown;
  export function difference(...rest: unknown[]): unknown;
  export function differenceWith(...rest: unknown[]): unknown;
  export function dissoc(...rest: unknown[]): unknown;
  export function dissocPath(...rest: unknown[]): unknown;
  export function divide(...rest: unknown[]): unknown;
  export function drop(...rest: unknown[]): unknown;
  export function dropLast(...rest: unknown[]): unknown;
  export function dropLastWhile(...rest: unknown[]): unknown;
  export function dropRepeats(...rest: unknown[]): unknown;
  export function dropRepeatsWith(...rest: unknown[]): unknown;
  export function dropWhile(...rest: unknown[]): unknown;
  export function either(...rest: unknown[]): unknown;
  export function empty(...rest: unknown[]): unknown;
  export function endsWith(...rest: unknown[]): unknown;
  export function eqBy(...rest: unknown[]): unknown;
  export function eqProps(...rest: unknown[]): unknown;
  export function equals(...rest: unknown[]): unknown;
  export function evolve(...rest: unknown[]): unknown;
  export function filter(...rest: unknown[]): unknown;
  export function find(...rest: unknown[]): unknown;
  export function findIndex(...rest: unknown[]): unknown;
  export function findLast(...rest: unknown[]): unknown;
  export function findLastIndex(...rest: unknown[]): unknown;
  export function flatten(...rest: unknown[]): unknown;
  export function flip(...rest: unknown[]): unknown;
  export function forEach(...rest: unknown[]): unknown;
  export function forEachObjIndexed(...rest: unknown[]): unknown;
  export function fromPairs(...rest: unknown[]): unknown;
  export function groupBy(...rest: unknown[]): unknown;
  export function groupWith(...rest: unknown[]): unknown;
  export function gt(...rest: unknown[]): unknown;
  export function gte(...rest: unknown[]): unknown;
  export function has(...rest: unknown[]): unknown;
  export function hasIn(...rest: unknown[]): unknown;
  export function hasPath(...rest: unknown[]): unknown;
  export function head(...rest: unknown[]): unknown;
  export function identical(...rest: unknown[]): unknown;
  export function identity(...rest: unknown[]): unknown;
  export function ifElse(...rest: unknown[]): unknown;
  export function inc(...rest: unknown[]): unknown;
  export function includes(...rest: unknown[]): unknown;
  export function indexBy(...rest: unknown[]): unknown;
  export function indexOf(...rest: unknown[]): unknown;
  export function init(...rest: unknown[]): unknown;
  export function innerJoin(...rest: unknown[]): unknown;
  export function insert(...rest: unknown[]): unknown;
  export function insertAll(...rest: unknown[]): unknown;
  export function intersection(...rest: unknown[]): unknown;
  export function intersperse(...rest: unknown[]): unknown;
  export function into(...rest: unknown[]): unknown;
  export function invert(...rest: unknown[]): unknown;
  export function invertObj(...rest: unknown[]): unknown;
  export function invoker(...rest: unknown[]): unknown;
  export function is(...rest: unknown[]): unknown;
  export function isEmpty(...rest: unknown[]): unknown;
  export function isNil(...rest: unknown[]): unknown;
  export function join(...rest: unknown[]): unknown;
  export function juxt(...rest: unknown[]): unknown;
  export function keys(...rest: unknown[]): unknown;
  export function keysIn(...rest: unknown[]): unknown;
  export function last(...rest: unknown[]): unknown;
  export function lastIndexOf(...rest: unknown[]): unknown;
  export function length(...rest: unknown[]): unknown;
  export function lens(...rest: unknown[]): unknown;
  export function lensIndex(...rest: unknown[]): unknown;
  export function lensPath(...rest: unknown[]): unknown;
  export function lensProp(...rest: unknown[]): unknown;
  export function lift(...rest: unknown[]): unknown;
  export function liftN(...rest: unknown[]): unknown;
  export function lt(...rest: unknown[]): unknown;
  export function lte(...rest: unknown[]): unknown;
  export function map(...rest: unknown[]): unknown;
  export function mapAccum(...rest: unknown[]): unknown;
  export function mapAccumRight(...rest: unknown[]): unknown;
  export function mapObjIndexed(...rest: unknown[]): unknown;
  export function match(...rest: unknown[]): unknown;
  export function mathMod(...rest: unknown[]): unknown;
  export function max(...rest: unknown[]): unknown;
  export function maxBy(...rest: unknown[]): unknown;
  export function mean(...rest: unknown[]): unknown;
  export function median(...rest: unknown[]): unknown;
  export function memoizeWith(...rest: unknown[]): unknown;
  export function merge(...rest: unknown[]): unknown;
  export function mergeAll(...rest: unknown[]): unknown;
  export function mergeDeepLeft(...rest: unknown[]): unknown;
  export function mergeDeepRight(...rest: unknown[]): unknown;
  export function mergeDeepWith(...rest: unknown[]): unknown;
  export function mergeDeepWithKey(...rest: unknown[]): unknown;
  export function mergeLeft(...rest: unknown[]): unknown;
  export function mergeRight(...rest: unknown[]): unknown;
  export function mergeWith(...rest: unknown[]): unknown;
  export function mergeWithKey(...rest: unknown[]): unknown;
  export function min(...rest: unknown[]): unknown;
  export function minBy(...rest: unknown[]): unknown;
  export function modulo(...rest: unknown[]): unknown;
  export function move(...rest: unknown[]): unknown;
  export function multiply(...rest: unknown[]): unknown;
  export function nAry(...rest: unknown[]): unknown;
  export function negate(...rest: unknown[]): unknown;
  export function none(...rest: unknown[]): unknown;
  export function not(...rest: unknown[]): unknown;
  export function nth(...rest: unknown[]): unknown;
  export function nthArg(...rest: unknown[]): unknown;
  export function o(...rest: unknown[]): unknown;
  export function objOf(...rest: unknown[]): unknown;
  export function of(...rest: unknown[]): unknown;
  export function omit(...rest: unknown[]): unknown;
  export function once(...rest: unknown[]): unknown;
  export function or(...rest: unknown[]): unknown;
  export function otherwise(...rest: unknown[]): unknown;
  export function over(...rest: unknown[]): unknown;
  export function pair(...rest: unknown[]): unknown;
  export function partial(...rest: unknown[]): unknown;
  export function partialRight(...rest: unknown[]): unknown;
  export function partition(...rest: unknown[]): unknown;
  export function path(...rest: unknown[]): unknown;
  export function pathEq(...rest: unknown[]): unknown;
  export function pathOr(...rest: unknown[]): unknown;
  export function pathSatisfies(...rest: unknown[]): unknown;
  export function pick(...rest: unknown[]): unknown;
  export function pickAll(...rest: unknown[]): unknown;
  export function pickBy(...rest: unknown[]): unknown;
  export function pipe(...rest: unknown[]): unknown;
  export function pipeK(...rest: unknown[]): unknown;
  export function pipeP(...rest: unknown[]): unknown;
  export function pipeWith(...rest: unknown[]): unknown;
  export function pluck(...rest: unknown[]): unknown;
  export function prepend(...rest: unknown[]): unknown;
  export function product(...rest: unknown[]): unknown;
  export function project(...rest: unknown[]): unknown;
  export function prop(...rest: unknown[]): unknown;
  export function propEq(...rest: unknown[]): unknown;
  export function propIs(...rest: unknown[]): unknown;
  export function propOr(...rest: unknown[]): unknown;
  export function propSatisfies(...rest: unknown[]): unknown;
  export function props(...rest: unknown[]): unknown;
  export function range(...rest: unknown[]): unknown;
  export function reduce(...rest: unknown[]): unknown;
  export function reduceBy(...rest: unknown[]): unknown;
  export function reduceRight(...rest: unknown[]): unknown;
  export function reduceWhile(...rest: unknown[]): unknown;
  export function reduced(...rest: unknown[]): unknown;
  export function reject(...rest: unknown[]): unknown;
  export function remove(...rest: unknown[]): unknown;
  export function repeat(...rest: unknown[]): unknown;
  export function replace(...rest: unknown[]): unknown;
  export function reverse(...rest: unknown[]): unknown;
  export function scan(...rest: unknown[]): unknown;
  export function sequence(...rest: unknown[]): unknown;
  export function set(...rest: unknown[]): unknown;
  export function slice(...rest: unknown[]): unknown;
  export function sort(...rest: unknown[]): unknown;
  export function sortBy(...rest: unknown[]): unknown;
  export function sortWith(...rest: unknown[]): unknown;
  export function split(...rest: unknown[]): unknown;
  export function splitAt(...rest: unknown[]): unknown;
  export function splitEvery(...rest: unknown[]): unknown;
  export function splitWhen(...rest: unknown[]): unknown;
  export function startsWith(...rest: unknown[]): unknown;
  export function subtract(...rest: unknown[]): unknown;
  export function sum(...rest: unknown[]): unknown;
  export function symmetricDifference(...rest: unknown[]): unknown;
  export function tail(...rest: unknown[]): unknown;
  export function take(...rest: unknown[]): unknown;
  export function takeLast(...rest: unknown[]): unknown;
  export function takeLastWhile(...rest: unknown[]): unknown;
  export function takeWhile(...rest: unknown[]): unknown;
  export function tap(...rest: unknown[]): unknown;
  export function test(...rest: unknown[]): unknown;
  export function then(...rest: unknown[]): unknown;
  export function times(...rest: unknown[]): unknown;
  export function toLower(...rest: unknown[]): unknown;
  export function toPairs(...rest: unknown[]): unknown;
  export function toPairsIn(...rest: unknown[]): unknown;
  export function toString(...rest: unknown[]): unknown;
  export function toUpper(...rest: unknown[]): unknown;
  export function transduce(...rest: unknown[]): unknown;
  export function transpose(...rest: unknown[]): unknown;
  export function traverse(...rest: unknown[]): unknown;
  export function trim(...rest: unknown[]): unknown;
  export function tryCatch(...rest: unknown[]): unknown;
  export function type(...rest: unknown[]): unknown;
  export function unapply(...rest: unknown[]): unknown;
  export function unary(...rest: unknown[]): unknown;
  export function uncurryN(...rest: unknown[]): unknown;
  export function unfold(...rest: unknown[]): unknown;
  export function union(...rest: unknown[]): unknown;
  export function unionWith(...rest: unknown[]): unknown;
  export function uniq(...rest: unknown[]): unknown;
  export function uniqBy(...rest: unknown[]): unknown;
  export function uniqWith(...rest: unknown[]): unknown;
  export function unless(...rest: unknown[]): unknown;
  export function unnest(...rest: unknown[]): unknown;
  export function until(...rest: unknown[]): unknown;
  export function update(...rest: unknown[]): unknown;
  export function useWith(...rest: unknown[]): unknown;
  export function values(...rest: unknown[]): unknown;
  export function valuesIn(...rest: unknown[]): unknown;
  export function view(...rest: unknown[]): unknown;
  export function when(...rest: unknown[]): unknown;
  export function where(...rest: unknown[]): unknown;
  export function whereEq(...rest: unknown[]): unknown;
  export function without(...rest: unknown[]): unknown;
  export function xprod(...rest: unknown[]): unknown;
  export function zip(...rest: unknown[]): unknown;
  export function zipObj(...rest: unknown[]): unknown;
  export function zipWith(...rest: unknown[]): unknown;
  export function thunkify(...rest: unknown[]): unknown;
}
